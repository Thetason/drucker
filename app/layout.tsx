import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
        <script dangerouslySetInnerHTML={{
          __html: `
            // vocal202065@gmail.com 페르소나 데이터 보호
            (function() {
              const PROTECTED_EMAIL = 'vocal202065@gmail.com';
              const PERSONA_KEY = 'drucker-persona-' + PROTECTED_EMAIL;
              const BACKUP_KEY = PERSONA_KEY + '-backup';
              
              // 현재 로그인된 사용자 확인
              const authData = localStorage.getItem('drucker-auth');
              if (authData) {
                const user = JSON.parse(authData);
                if (user.email === PROTECTED_EMAIL) {
                  // 현재 데이터 백업
                  const currentData = localStorage.getItem(PERSONA_KEY);
                  if (currentData) {
                    // 데이터가 있으면 백업
                    localStorage.setItem(BACKUP_KEY, currentData);
                    console.log('✅ 페르소나 데이터 백업 완료');
                    
                    // 데이터 내용 확인
                    try {
                      const persona = JSON.parse(currentData);
                      console.log('현재 페르소나:', persona.name || '이름 없음');
                    } catch (e) {
                      console.error('페르소나 데이터 파싱 오류');
                    }
                  } else {
                    // 백업에서 복구 시도
                    const backupData = localStorage.getItem(BACKUP_KEY);
                    if (backupData) {
                      localStorage.setItem(PERSONA_KEY, backupData);
                      console.log('✅ 백업에서 페르소나 데이터 복구');
                    }
                  }
                }
              }
              
              // 데이터 삭제 방지
              const originalRemoveItem = localStorage.removeItem;
              localStorage.removeItem = function(key) {
                if (key === PERSONA_KEY) {
                  console.warn('⚠️ 페르소나 데이터 삭제 시도가 차단되었습니다');
                  return;
                }
                return originalRemoveItem.call(this, key);
              };
            })();
          `
        }} />
      </body>
    </html>
  );
}
